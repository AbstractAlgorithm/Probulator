{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m_exper",
				"m_experimentNames"
			],
			[
				"m_experi",
				"m_experimentList"
			],
			[
				"Exper",
				"experimentList"
			],
			[
				"exper",
				"experimentList"
			],
			[
				"anim",
				"animLen"
			],
			[
				"s_st",
				"s_startRot"
			],
			[
				"s_start",
				"s_startLightIntensity"
			],
			[
				"rot",
				"rotation"
			],
			[
				"ani",
				"animLen"
			],
			[
				"eFadeL",
				"eFadeLightIn0"
			],
			[
				"Demo",
				"DemoUpdateData"
			],
			[
				"Primitive",
				"PrimitiveDemo"
			],
			[
				"loadTe",
				"loadTexturePriv"
			],
			[
				"set",
				"settings"
			],
			[
				"text",
				"textureIdx"
			],
			[
				"s_light",
				"s_lightData"
			],
			[
				"s_ligh",
				"s_lightData"
			],
			[
				"m_lightPos",
				"m_lightPositionX"
			],
			[
				"deb",
				"debugWindHeight"
			],
			[
				"mat",
				"material"
			],
			[
				"dif",
				"diffuseTint"
			],
			[
				"new",
				"newMtl"
			],
			[
				"flo",
				"floorScale"
			],
			[
				"m_lg",
				"m_lightIntensity"
			],
			[
				"as",
				"assimpMesh"
			],
			[
				"u_",
				"u_roughness"
			],
			[
				"m_tex",
				"m_textured"
			],
			[
				"m_textu",
				"m_textureIdx"
			],
			[
				"s_texM",
				"s_texEmissiveColorMap"
			],
			[
				"m_te",
				"m_textureIdx"
			],
			[
				"gDeb",
				"gDebugIntPos"
			],
			[
				"gDebug",
				"gDebugIntPos"
			],
			[
				"solid",
				"solidAngle"
			],
			[
				"lig",
				"lightCenter"
			],
			[
				"lod",
				"lodlevel"
			],
			[
				"M",
				"M_PI"
			],
			[
				"a",
				"a_texcoord0"
			],
			[
				"int",
				"intensity"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/prog/probulator/Source/External/imgui/imgui.h",
			"settings":
			{
				"buffer_size": 107196,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/prog/probulator/Source/External/imgui/imgui.cpp",
			"settings":
			{
				"buffer_size": 394309,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/prog/probulator/Source/ProbulatorCLI/Main.cpp",
			"settings":
			{
				"buffer_size": 4375,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Experiments.h",
			"settings":
			{
				"buffer_size": 15674,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/prog/probulator/Source/ProbulatorGUI/Main.cpp",
			"settings":
			{
				"buffer_size": 14245,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Experiments.cpp",
			"settings":
			{
				"buffer_size": 3146,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/MSBuild/MSBuild.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/MSBuild/MSBuild.sublime-build",
					""
				],
				[
					"Packages/MSBuild/MSBuild.sublime-build",
					"Parallel Build"
				],
				[
					"Packages/MSBuild/MSBuild.sublime-build",
					"Debug Configuration"
				],
				[
					"Packages/MSBuild/MSBuild.sublime-build",
					"Release Configuration"
				]
			],
			[
				"Packages/MSBuild/MSBuild.sublime-build",
				"Debug Configuration"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 173.0,
		"last_filter": "Build:",
		"selected_items":
		[
			[
				"Build:",
				"Build: New Build System"
			],
			[
				"package in",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/prog/probulator/Source",
		"/D/prog/probulator/Source/ProbulatorGUI"
	],
	"file_history":
	[
		"/D/prog/probulator/Source/Probulator/Probulator.h",
		"/D/prog/probulator/Source/Probulator/Common.h",
		"/D/prog/probulator/Source/External/imgui/imgui.cpp",
		"/D/prog/bgfx/examples/xx-arealights/common.sh",
		"/D/prog/bgfx/examples/xx-arealights/arealight_common.h",
		"/D/prog/bgfx/examples/xx-arealights/sponza_demo.cpp",
		"/D/prog/bgfx/examples/xx-arealights/arealights.cpp",
		"/D/prog/bgfx/examples/xx-arealights/primitive_demo.cpp",
		"/D/prog/bgfx/examples/xx-arealights/demos.h",
		"/D/prog/bgfx/examples/xx-arealights/sibenik_demo.cpp",
		"/D/prog/bgfx/examples/common/camera.h",
		"/D/prog/bgfx/examples/common/camera.cpp",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_diffuse_ltc.sc",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_specular_ltc.sc",
		"/D/prog/probulator/README.md",
		"/D/prog/gfxsamples/GIBaking/MeshBaker.cpp",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Graphics/SH.cpp",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Graphics/SH.h",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_lighting.sc",
		"/D/prog/bgfx/examples/xx-arealights/helpers.sh",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_specular_gt.sc",
		"/D/prog/bgfx/examples/runtime/meshes/morgan-sponza.mtl",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_diffuse_gt.sc",
		"/D/prog/bgfx/examples/common/imgui/imgui.cpp",
		"/D/prog/bgfx/examples/common/imgui/imgui.h",
		"/D/prog/bgfx/examples/xx-arealights/mtlloader.h",
		"/D/prog/bgfx/examples/xx-arealights/mtlloader.cpp",
		"/D/prog/bgfx/examples/runtime/textures/textures_pbr/ChainTexture_Normal.tga",
		"/D/prog/bgfx/include/bgfx/bgfx.h",
		"/C/Users/dneub/Downloads/crytek-sponza/SponzaPBR_Textures/sponzaPBR.mtl",
		"/D/prog/bgfx/src/bgfx_p.h",
		"/D/prog/bgfx/src/renderer_d3d9.h",
		"/D/prog/bgfx/src/vertexdecl.h",
		"/C/Users/dneub/Downloads/sibenik/sibenik.mtl",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_textured.sc",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_color_textured.sc",
		"/C/Users/dneub/Downloads/sibenik/copyright.txt",
		"/C/Users/dneub/Downloads/sponza_obj/sponza.mtl",
		"/D/prog/bgfx/tools/geometryc/geometryc.cpp",
		"/D/prog/bgfx/examples/13-stencil/stencil.cpp",
		"/D/prog/bgfx/examples/xx-arealights/dj_brdf.glsl",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_blit.sc",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_color_constant.sc",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_packdepth.sc",
		"/D/prog/bgfx/examples/xx-arealights/makefile",
		"/D/prog/bgfx/examples/xx-arealights/squad.sh",
		"/D/prog/bgfx/examples/xx-arealights/varying.def.sc",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_blit.sc",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_color.sc",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_depth.sc",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_packdepth.sc",
		"/C/Users/dneub/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/dneub/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/D/prog/linearsphericaldistribution/cpp/demoAreaLightEric/areaLightSpecularPolygon.frag",
		"/D/prog/linearsphericaldistribution/cpp/demoAreaLightEric/demo_arealight.cpp",
		"/D/prog/linearsphericaldistribution/cpp/fit/results/lsd_ggx.h",
		"/D/prog/linearsphericaldistribution/cpp/fit/results/lsd_ggx.inc",
		"/D/prog/bgfx/examples/common/glm/gtc/matrix_transform.hpp",
		"/D/prog/bgfx/src/bgfx_shader.sh",
		"/D/prog/bgfx/examples/09-hdr/common.sh",
		"/D/prog/bgfx/examples/01-cubes/fs_cubes.sc",
		"/D/prog/bgfx/examples/common/common.sh",
		"/D/prog/bgfx/examples/common/shaderlib.sh",
		"/D/prog/bgfx/examples/13-stencil/fs_stencil_color_lighting.sc",
		"/D/prog/bgfx/examples/xx-arealights/arealight_common.cpp",
		"/D/prog/bgfx/examples/16-shadowmaps/shadowmaps.cpp",
		"/D/prog/bgfx/examples/xx-arealights/arelight_common.h",
		"/D/prog/bx/include/bx/readerwriter.h",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Graphics/Model.cpp",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_color_lighting_hard.sc",
		"/D/prog/bgfx/examples/xx-arealights/fs_arealights_color_lighting_gt.sc",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Graphics/Model.h",
		"/D/prog/bgfx/examples/common/Assimp-3.1.1/include/Importer.hpp",
		"/D/prog/bx/include/bx/macros.h",
		"/D/prog/bx/include/bx/bx.h",
		"/D/prog/bgfx/src/config.h",
		"/D/prog/bx/include/bx/debug.h",
		"/D/prog/gfxsamples/AreaLights/AreaLights.cpp",
		"/D/prog/bgfx/scripts/bgfx.lua",
		"/D/prog/assimp-master/INSTALL",
		"/D/prog/assimp-master/CMakeLists.txt",
		"/D/prog/assimp-master/Readme.md",
		"/D/prog/assimp-master/README",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/FileIO.h",
		"/D/prog/gfxsamples/AreaLights/AreaLights.h",
		"/D/prog/gfxsamples/AreaLights/MeshRenderer.h",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Serialization.h",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Graphics/WICTextureLoader.h",
		"/D/prog/gfxsamples/SampleFramework11/v1.01/Graphics/SDKMesh.h",
		"/D/prog/bgfx/include/bgfx/bgfxdefines.h",
		"/D/prog/bgfx/src/bgfx.cpp",
		"/D/prog/bgfx/examples/common/glm/gtc/matrix_transform.inl",
		"/D/prog/bgfx/examples/common/glm/gtx/transform.inl",
		"/D/prog/bx/include/bx/fpumath.h",
		"/D/prog/bgfx/examples/common/glm/gtx/matrix_major_storage.hpp",
		"/D/prog/bgfx/examples/common/glm/detail/type_vec3.hpp",
		"/D/prog/linearsphericaldistribution/cpp/fit/lsd_ggx.h",
		"/D/prog/bgfx/examples/common/entry/input.h",
		"/D/prog/bgfx/examples/common/entry/entry.h",
		"/D/prog/bgfx/examples/common/entry/entry.cpp",
		"/D/prog/bgfx/examples/common/glm/gtc/matrix_inverse.hpp",
		"/D/prog/bgfx/examples/common/glm/detail/type_mat4x4.hpp",
		"/D/prog/linearsphericaldistribution/cpp/fit/fitLSD.cpp",
		"/D/prog/bgfx/examples/common/entry/dbg.cpp",
		"/D/prog/bgfx/examples/common/entry/dbg.h",
		"/D/prog/linearsphericaldistribution/.hgignore",
		"/D/prog/bgfx/examples/xx-arealights/lsd_ggx.inc",
		"/D/prog/bgfx/examples/xx-arealights/lsd_ggx.h",
		"/D/prog/linearsphericaldistribution/cpp/demoPlot/demo_plot.cpp",
		"/D/prog/linearsphericaldistribution/cpp/demoPlot/config.txt",
		"/D/prog/bgfx/examples/common/glm/gtc/matrix_inverse.inl",
		"/D/prog/bgfx/examples/common/glm/vec3.hpp",
		"/D/prog/bgfx/examples/common/glm/gtc/matrix_integer.hpp",
		"/D/prog/bgfx/examples/common/glm/mat4x4.hpp",
		"/D/prog/bgfx/examples/common/common.h",
		"/D/prog/bgfx/examples/common/glm/fwd.hpp",
		"/D/prog/bgfx/examples/common/glm/detail/type_mat.hpp",
		"/D/prog/linearsphericaldistribution/cpp/msvc/external/include/glm/vec2.hpp",
		"/C/Users/dneub/AppData/Roaming/Sublime Text 3/Installed Packages/MSBuild.sublime-package",
		"/D/prog/bgfx/examples/14-shadowvolumes/shadowvolumes.cpp",
		"/D/prog/bx/include/bx/thread.h",
		"/D/prog/bx/include/bx/config.h",
		"/D/prog/bgfx/examples/08-update/update.cpp",
		"/D/prog/bgfx/src/renderer_mtl.mm",
		"/D/prog/bgfx/examples/xx-arealights/vs_arealights_color_lighting.sc",
		"/D/prog/linearsphericaldistribution/cpp/fit/fitLSDquantiles.cpp",
		"/C/Users/dneub/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/D/prog/probulator/Source/CMakeLists.txt"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"m_menuWidth",
			"m_ExperimentResultsList",
			"experimentListResults",
			"ExperimentListResults",
			"experimentList",
			"m_experimentListResults",
			"ExperimentResults",
			"addAllExperiments",
			"addExperiment",
			"Checkbox(const",
			"Checkbox",
			"checkbox",
			"20.0f",
			"sameline",
			"::sameline",
			"SameLine",
			"space",
			"LabelText",
			"label",
			"ExperimentList",
			"addExperiment",
			"horizontal",
			"layout",
			"Button",
			"button",
			"Button",
			"button",
			"CollapsingHeader",
			"captureFrame",
			"s_startRot",
			"size",
			"eGrowRainbow",
			"eFadeInRainbow",
			"eFadeLightInRainbow",
			"eFadeLightOff1",
			"maxInt",
			"10.0f",
			"rotateLight0",
			"RotateLight0",
			"rotateLight0",
			"interpolatePath",
			"glm::",
			"glm",
			"submitPerFrameUniforms",
			"viewPos",
			"u_viewPosition",
			"uniforms",
			"Uniforms",
			"cam",
			"m_view",
			"SponzaDemo",
			"camera",
			"animated",
			"setMat4x4",
			"x[",
			"m_view",
			"ViewState",
			"viewState",
			"ViewState",
			"viewState",
			"demo",
			"Demo",
			"demo",
			"Demo",
			"demo",
			"demoSettings",
			"cameraGetViewMtx",
			"init(",
			"DemoUpdateData",
			"deltaTime",
			"m_view",
			"cameraGetViewMtx",
			"initialPos",
			"ProjectOntoSH9Color",
			"loadTexturePriv",
			"s_roughnessMap",
			"tga",
			"loadTexturePriv",
			"m_textureCache",
			"loadTexturePriv",
			"s_hplaneVertices",
			"PosNormalTangentTexcoordVertex",
			"PosNormalTexcoordVertex",
			"PosNormalTangentTexcoordVertex",
			"PosTe",
			"m_metalicMap",
			"metal",
			"albedoColor",
			"s_lightData",
			"roughnes",
			"SetLightUniforms",
			"u_lightIntensity",
			"rotation",
			"Rotation",
			"rotation",
			"100",
			"40",
			"SetLightUniforms",
			"colorMap",
			"SetLightUniforms",
			"LightColorMap",
			"SetLightUniforms",
			"LightSettings",
			"lightTransform",
			"m_lightPositionX",
			"pointLight",
			"lightPos",
			"m_currLightIdx",
			"m_textureIdx",
			"settings",
			"umbrella",
			"texture",
			"lightTransform",
			"m_lightRotationY",
			"Rotation",
			"lightPositi",
			"m_lightRotationX",
			"lightposit",
			"m_lightRotationX",
			"Rotation",
			"editSceneParams",
			"imguiBeginScrollArea",
			"leftScrollArea",
			"lightrotatio",
			"m_lightRotationX",
			"Rotation",
			"debugui",
			"vertexNorm"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/prog/probulator/Source/External/imgui/imgui.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 107196,
						"regions":
						{
						},
						"selection":
						[
							[
								23642,
								23650
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 28.0,
						"translation.y": 3086.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/prog/probulator/Source/External/imgui/imgui.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 394309,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/prog/probulator/Source/ProbulatorCLI/Main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4375,
						"regions":
						{
						},
						"selection":
						[
							[
								4375,
								4375
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2141.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Experiments.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15674,
						"regions":
						{
						},
						"selection":
						[
							[
								2778,
								2778
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 938.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "/D/prog/probulator/Source/ProbulatorGUI/Main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14245,
						"regions":
						{
						},
						"selection":
						[
							[
								7715,
								7715
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3023.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Experiments.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15674,
						"regions":
						{
						},
						"selection":
						[
							[
								148,
								165
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Experiments.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3146,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/prog/probulator/Source/ProbulatorCLI/Main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4375,
						"regions":
						{
						},
						"selection":
						[
							[
								4375,
								4375
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2618.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 25.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/MSBuild/MSBuild.sublime-build",
	"project": "probulator.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"exper",
				"Probulator\\Experiments.h"
			],
			[
				"probu",
				"Probulator\\Probulator.h"
			],
			[
				"ex",
				"Probulator\\Experiments.h"
			],
			[
				"main.c",
				"ProbulatorCLI\\Main.cpp"
			],
			[
				"imgui.h",
				"External\\imgui\\imgui.h"
			],
			[
				"demos",
				"examples\\xx-arealights\\demos.h"
			],
			[
				"demo",
				"examples\\xx-arealights\\demos.h"
			],
			[
				"demo.h",
				"examples\\xx-arealights\\demos.h"
			],
			[
				"_demo",
				"examples\\xx-arealights\\sibenik_demo.cpp"
			],
			[
				"son",
				"examples\\xx-arealights\\sponza_demo.cpp"
			],
			[
				"arealight",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"areacomm",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"camera.",
				"examples\\common\\camera.h"
			],
			[
				"arealights.",
				"examples\\xx-arealights\\arealights.cpp"
			],
			[
				"primti",
				"examples\\xx-arealights\\primitive_demo.cpp"
			],
			[
				"preim",
				"examples\\xx-arealights\\primitive_demo.cpp"
			],
			[
				"arealightcommon",
				"examples\\xx-arealights\\common.sh"
			],
			[
				"xx-areacommon",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"fsspecltc",
				"examples\\xx-arealights\\fs_arealights_specular_ltc.sc"
			],
			[
				"arealightcom",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"arealightltcs",
				"examples\\xx-arealights\\fs_arealights_specular_ltc.sc"
			],
			[
				"vsarealight.sc",
				"examples\\xx-arealights\\vs_arealights_lighting.sc"
			],
			[
				"helpers",
				"examples\\xx-arealights\\helpers.sh"
			],
			[
				"xx-area.sc",
				"examples\\xx-arealights\\fs_arealights_specular_gt.sc"
			],
			[
				"areacommon",
				"examples\\xx-arealights\\common.sh"
			],
			[
				"arespecltc",
				"examples\\xx-arealights\\fs_arealights_specular_ltc.sc"
			],
			[
				"primit",
				"examples\\xx-arealights\\primitive_demo.cpp"
			],
			[
				"arealightltc",
				"examples\\xx-arealights\\fs_arealights_diffuse_ltc.sc"
			],
			[
				"sponz",
				"examples\\xx-arealights\\sponza_demo.cpp"
			],
			[
				"sponza",
				"examples\\xx-arealights\\sponza_demo.cpp"
			],
			[
				"areal",
				"examples\\xx-arealights\\arealights.cpp"
			],
			[
				"demos.h",
				"examples\\xx-arealights\\demos.h"
			],
			[
				"arealightcomm",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"imgui",
				"examples\\common\\imgui\\imgui.h"
			],
			[
				"arealightcommsh",
				"examples\\xx-arealights\\common.sh"
			],
			[
				"arealightspeculgt",
				"examples\\xx-arealights\\fs_arealights_specular_gt.sc"
			],
			[
				"mtll",
				"examples\\xx-arealights\\mtlloader.cpp"
			],
			[
				"arealig",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"areali",
				"examples\\xx-arealights\\arealights.cpp"
			],
			[
				"vertex",
				"src\\vertexdecl.h"
			],
			[
				"specltc",
				"examples\\xx-arealights\\fs_arealights_specular_ltc.sc"
			],
			[
				"diffusegt",
				"examples\\xx-arealights\\fs_arealights_diffuse_gt.sc"
			],
			[
				"diffuseltc",
				"examples\\xx-arealights\\fs_arealights_diffuse_ltc.sc"
			],
			[
				"vsarealighting",
				"examples\\xx-arealights\\vs_arealights_lighting.sc"
			],
			[
				"vsarealight",
				"examples\\xx-arealights\\vs_arealights_textured.sc"
			],
			[
				"fsareatextu",
				"examples\\xx-arealights\\fs_arealights_color_textured.sc"
			],
			[
				"arealightdiffu",
				"examples\\xx-arealights\\fs_arealights_diffuse_gt.sc"
			],
			[
				"arecommonsh",
				"examples\\xx-arealights\\common.sh"
			],
			[
				"arealtc",
				"examples\\xx-arealights\\fs_arealights_diffuse_ltc.sc"
			],
			[
				"ltc",
				"examples\\xx-arealights\\fs_arealights_specular_ltc.sc"
			],
			[
				"ltcsc",
				"examples\\xx-arealights\\fs_arealights_diffuse_ltc.sc"
			],
			[
				"geometry",
				"tools\\geometryc\\geometryc.cpp"
			],
			[
				"demos.",
				"examples\\xx-arealights\\demos.h"
			],
			[
				"primitiv",
				"examples\\xx-arealights\\primitive_demo.cpp"
			],
			[
				"common.sh",
				"examples\\xx-arealights\\common.sh"
			],
			[
				"areacommonsh",
				"examples\\xx-arealights\\common.sh"
			],
			[
				"arealtc.sc",
				"examples\\xx-arealights\\fs_arealights_specular_ltc.sc"
			],
			[
				"gt.",
				"examples\\xx-arealights\\fs_arealights_diffuse_gt.sc"
			],
			[
				"shaderlib.sh",
				"examples\\common\\shaderlib.sh"
			],
			[
				"bgfxshad",
				"src\\bgfx_shader.sh"
			],
			[
				"common",
				"examples\\09-hdr\\common.sh"
			],
			[
				"helperssh",
				"examples\\xx-arealights\\helpers.sh"
			],
			[
				"commonsh",
				"examples\\09-hdr\\common.sh"
			],
			[
				"squad",
				"examples\\xx-arealights\\squad.sh"
			],
			[
				"arealightdifgt",
				"examples\\xx-arealights\\fs_arealights_diffuse_gt.sc"
			],
			[
				"diffusesc",
				"examples\\xx-arealights\\fs_arealights_diffuse_ltc.sc"
			],
			[
				"arealights",
				"examples\\xx-arealights\\arealights.cpp"
			],
			[
				"glmtrans",
				"examples\\common\\glm\\gtc\\matrix_transform.hpp"
			],
			[
				"prim",
				"examples\\xx-arealights\\primitive_demo.cpp"
			],
			[
				"arealigco",
				"examples\\xx-arealights\\arealight_common.h"
			],
			[
				"fsareblit",
				"examples\\xx-arealights\\fs_arealights_blit.sc"
			],
			[
				"vsarealigblit",
				"examples\\xx-arealights\\vs_arealights_blit.sc"
			],
			[
				"fsarealightpack",
				"examples\\xx-arealights\\fs_arealights_packdepth.sc"
			],
			[
				"vsarealpackdepth",
				"examples\\xx-arealights\\vs_arealights_packdepth.sc"
			],
			[
				"vsarealighttex",
				"examples\\xx-arealights\\vs_arealights_textured.sc"
			],
			[
				"fsarelitext",
				"examples\\xx-arealights\\fs_arealights_color_textured.sc"
			],
			[
				"fsareacolor",
				"examples\\xx-arealights\\fs_arealights_color_constant.sc"
			],
			[
				"fscolor",
				"examples\\13-stencil\\fs_stencil_color_lighting.sc"
			],
			[
				"fsarealighttexture",
				"examples\\xx-arealights\\fs_arealights_color_textured.sc"
			],
			[
				"arealighttext",
				"examples\\xx-arealights\\vs_arealights_textured.sc"
			],
			[
				"fs_arealightgt",
				"examples\\xx-arealights\\fs_arealights_color_lighting_gt.sc"
			],
			[
				"arealighthard",
				"examples\\xx-arealights\\fs_arealights_color_lighting_hard.sc"
			],
			[
				"macros",
				"bx\\macros.h"
			],
			[
				"write",
				"bx\\readerwriter.h"
			],
			[
				"confi",
				"src\\config.h"
			],
			[
				"bx.h",
				"bx\\bx.h"
			],
			[
				"macros.h",
				"bx\\macros.h"
			],
			[
				"debu",
				"bx\\debug.h"
			],
			[
				"geometry.cpp",
				"tools\\geometryc\\geometryc.cpp"
			],
			[
				"arealih",
				"examples\\xx-arealights\\fs_arealights_color_lighting_hard.sc"
			],
			[
				"area",
				"examples\\xx-arealights\\arealights.cpp"
			],
			[
				"debug",
				"bx\\debug.h"
			],
			[
				"importe",
				"examples\\common\\Assimp-3.1.1\\include\\Importer.hpp"
			],
			[
				"fsareagr",
				"examples\\xx-arealights\\fs_arealights_color_lighting_gt.sc"
			],
			[
				"fsareagtsc",
				"examples\\xx-arealights\\fs_arealights_color_lighting_gt.sc"
			],
			[
				"matrixtranin",
				"examples\\common\\glm\\gtc\\matrix_transform.inl"
			],
			[
				"transforminl",
				"examples\\common\\glm\\gtx\\transform.inl"
			],
			[
				"glmtransf",
				"examples\\common\\glm\\gtc\\matrix_transform.hpp"
			],
			[
				"camera.h",
				"examples\\common\\camera.h"
			],
			[
				"matrixtransf",
				"examples\\common\\glm\\gtc\\matrix_transform.hpp"
			],
			[
				"glmmajor",
				"examples\\common\\glm\\gtx\\matrix_major_storage.hpp"
			],
			[
				"areahard",
				"examples\\xx-arealights\\fs_arealights_color_lighting_hard.sc"
			],
			[
				"entry.h",
				"examples\\common\\entry\\entry.h"
			],
			[
				"input.h",
				"examples\\common\\entry\\input.h"
			],
			[
				"entry",
				"examples\\common\\entry\\entry.cpp"
			],
			[
				"glmmatrixinver",
				"examples\\common\\glm\\gtc\\matrix_inverse.hpp"
			],
			[
				"typevec3",
				"examples\\common\\glm\\detail\\type_vec3.hpp"
			],
			[
				"vec3",
				"examples\\common\\glm\\vec3.hpp"
			],
			[
				"matrixtran",
				"examples\\common\\glm\\gtc\\matrix_transform.hpp"
			],
			[
				"matrixinvers",
				"examples\\common\\glm\\gtc\\matrix_inverse.hpp"
			],
			[
				"glm",
				"examples\\common\\glm\\gtc\\matrix_integer.hpp"
			],
			[
				"fwd.",
				"examples\\common\\glm\\fwd.hpp"
			],
			[
				"typemat4x4.h",
				"examples\\common\\glm\\detail\\type_mat4x4.hpp"
			],
			[
				"type_mat",
				"examples\\common\\glm\\detail\\type_mat.hpp"
			],
			[
				"glm/mat4x4",
				"examples\\common\\glm\\mat4x4.hpp"
			],
			[
				"fsarealighttextu",
				"examples\\xx-arealights\\fs_arealights_color_textured.sc"
			],
			[
				"arealightcons",
				"examples\\xx-arealights\\fs_arealights_color_constant.sc"
			],
			[
				"arelightsgt",
				"examples\\xx-arealights\\fs_arealights_color_lighting_gt.sc"
			],
			[
				"bgfxsha",
				"src\\bgfx_shader.sh"
			],
			[
				"vsarea",
				"examples\\xx-arealights\\vs_arealights_color.sc"
			],
			[
				"vs_arealights_colo",
				"examples\\xx-arealights\\vs_arealights_color.sc"
			],
			[
				"vsarea.sc",
				"examples\\xx-arealights\\vs_arealights_color_lighting.sc"
			],
			[
				"bgfxshader",
				"src\\bgfx_shader.sh"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 271.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
